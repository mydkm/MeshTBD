import bpy
from bpy import context
import os

# Define the path to your .ply file
ply_filepath = "scaledSabrina.ply"  # Replace with the actual path

# Define the output path for the rendered image
output_filepath = "C:\\path\\to\\your\\output_render.png"  # Replace with your desired output path

# Clear existing objects in the scene (optional, but good for clean renders)
bpy.ops.wm.read_factory_settings(use_empty=True)

# Import the .ply file
# The 'filepath' argument specifies the path to the .ply file.
# The 'axis_forward' and 'axis_up' arguments can be adjusted if your .ply
# file has a different coordinate system orientation than Blender's default.
bpy.ops.wm.ply_import(filepath=ply_filepath)

# Get the imported object (assuming it's the only new object after import)
imported_object = bpy.context.selected_objects[0]

# --- Render Settings ---
# Set the render engine (e.g., 'CYCLES' or 'BLENDER_EEVEE')
bpy.context.scene.render.engine = 'BLENDER_EEVEE_NEXT'
bpy.ops.object.camera_add(location=(0, -10, 5), rotation=(1.1, 0, 0))
bpy.context.scene.camera = bpy.context.object

# Set the output resolution
bpy.context.scene.render.resolution_x = 1920
bpy.context.scene.render.resolution_y = 1080
bpy.context.scene.render.resolution_percentage = 100

# Set the output file format and path
bpy.context.scene.render.image_settings.file_format = 'PNG'
bpy.context.scene.render.filepath = output_filepath

# Optional: Adjust camera position and rotation if needed
# Example: Move the camera
# bpy.context.scene.camera.location = (5, -5, 5)
# bpy.context.scene.camera.rotation_euler = (0.785, 0, 0.785) # Roughly point towards origin

# Render the scene
bpy.ops.render.render(write_still=False)

print(f"Rendered image saved to: {output_filepath}")